
#CROSS=arm-none-linux-gnueabi-
#CROSS=

EXENAME = mobibench

SRCS = mobibench.c \
	  sqlite3.c

INSTALL = install

prefix = /usr/local
bindir = $(prefix)/bin

CFLAGS = $(CCFLAGS) -lpthread -ldl

#CFLAGS += -DDEBUG_SCRIPT

#for sqltie3
CFLAGS += -DNDEBUG=1 \
	-DHAVE_USLEEP=1 \
	-DSQLITE_HAVE_ISNAN \
	-DSQLITE_DEFAULT_JOURNAL_SIZE_LIMIT=10485760 \
	-DSQLITE_DEFAULT_PAGE_SIZE=4096 \
	-DSQLITE_DEFAULT_MEMSTATUS=0 \
	-DSQLITE_THREADSAFE=2 \
	-DSQLITE_TEMP_STORE=3 \
	-DSQLITE_POWERSAFE_OVERWRITE=1 \
	-DSQLITE_DEFAULT_FILE_FORMAT=4 \
	-DSQLITE_DEFAULT_AUTOVACUUM=1 \
	-DSQLITE_ENABLE_MEMORY_MANAGEMENT=1 \
	-DSQLITE_ENABLE_FTS3 \
	-DSQLITE_ENABLE_FTS3_BACKWARDS \
	-DSQLITE_ENABLE_FTS4 \
	-DSQLITE_OMIT_BUILTIN_TEST \
	-DSQLITE_OMIT_COMPILEOPTION_DIAGS \
	-DSQLITE_OMIT_LOAD_EXTENSION \
	-DSQLITE_DEFAULT_FILE_PERMISSIONS=0600

ifeq ($(TARGET_USES_ORDERED_WRITES),true)
CFLAGS += -DHAVE_ORDERED_WRITES
endif
ifeq ($(TARGET_USES_SEQUENTIAL_WRITES),true)
CFLAGS += -DHAVE_SEQUENTIAL_WRITES
endif
ifeq ($(TARGET_USES_ATOMIC_WRITES),true)
CFLAGS += -DSQLITE_ENABLE_ATOMIC_WRITE
endif
ifeq ($(TARGET_NEEDS_NO_DIRSYNC),true)
CFLAGS += -DSQLITE_DISABLE_DIRSYNC
endif

LOCAL_CFLAGS += $(CFLAGS) -DUSE_PREAD64 -Dfdatasync=fdatasync \
				-DHAVE_MALLOC_USABLE_SIZE

all :
	$(CC) -o $(EXENAME) $(SRCS) $(LOCAL_CFLAGS)

clean :
	rm -f *.o $(EXENAME)

install : $(EXENAME)
	@$(INSTALL) -m 755 -d $(DESTDIR)$(bindir)
	@$(INSTALL) $(EXENAME) $(DESTDIR)$(bindir)
